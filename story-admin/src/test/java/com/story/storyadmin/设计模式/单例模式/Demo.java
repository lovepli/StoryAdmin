package com.story.storyadmin.设计模式.单例模式;

/**
 * @author: lipan
 * @date: 2020-05-07
 * @description:
 */
public class Demo {

    /**
     * 保证一个类仅有一个实例，并提供一个访问它的全局访问点。
     *
     * Spring中的单例模式完成了后半句话，即提供了全局的访问点BeanFactory。但没有从构造器级别去控制单例，这是因为Spring管理的是是任意的Java对象。
     *
     * 尽量在合适的场合使用单例
     * 使用单例可以减轻加载的负担，缩短加载的时间，提高加载的效率，但并不是所有地方都适用于单例
     * 简单来说，单例主要适用于以下三个方面：
     * 控制资源的使用，通过线程同步来控制资源的并发访问；
     * 控制实例的产生，以达到节约资源的目的；
     * 控制数据共享，在不建立直接关联的条件下，让多个不相关的进程或线程之间实现通信。
     *
     */
}
